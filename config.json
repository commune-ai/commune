{

    "name": "commune",
    "version": "1.0.0", 
    "code": "commune-ai/commune.git",
    "app": "communeai.org",
    "core": ["key", "server", "vali", "chain", "client", "cli", "storage"],
    "modules": ["commune-ai/modules", "commune-ai/app", "commune-ai/chain"],
    "endpoints": ["forward", "info"],
    "port_range":  [50050, 50150],
    "shortcuts": { 
        "or" : "model.openrouter",
        "r" :  "remote",
        "ch" :  "chain",
        "chain": "chain", 
        "client": "server.client",
        "local": "server",
        "serv": "server", 
        "tweet": "x",
        "d": "docker",
        "dock": "docker"
        },
        
    "routes": {
            "vali": [
                "run_epoch",
                "setup_vali",
                "from_module",
                {"from": "run_epoch", "to": "epoch"}
            ],
            "py": [
                "envs", 
                "env2cmd", 
                "create_env", 
                "env2path"
                ],
            "cli": [
                "parse_args"
            ],
            "streamlit": [
                "set_page_config"
            ],
            "docker": [
                "ps",
                "dlogs",
                "images"
            ],
            "client": [
                "call",
                "call_search",
                "connect",
                "client"
            ],
            "repo": [
                "is_repo"
            ],
            "serializer": [
                "serialize",
                "deserialize",
                "serializer_map"
            ],
            "key": [
                "signtest",
                "rename_key",
                "ss58_encode",
                "ss58_decode",
                "key2mem",
                "multi",
                "key_info",
                "valid_ss58_address",
                "add_key",
                "str2key",
                "root_key",
                "pwd2key",
                "mv_key",
                "add_keys",
                "key_exists",
                "ls_keys",
                "rm_key",
                "key_encrypted",
                "encrypt_key",
                "decrypt_key",
                "get_keys",
                "rm_keys",
                "key2address",
                "key_addresses",
                "address2key",
                "is_key",
                "new_key",
                "save_keys",
                "load_key",
                "load_keys",
                "encrypt_file",
                "decrypt_file",
                "get_key_for_address",
                "resolve_key_address",
                "ticket"
            ],
            "app": [
                "start_app",
                "apps",
                "app2info",
                "kill_app"
            ],
            "server": [
                "fleet",
                "serve",
                "wait_for_server", 
                "endpoint", 
                "is_endpoint",
                "processes", 
                "kill", 
                "kill_all",
                "logs",
                "networks",
                "rm_server",
                "server_exists",
                "add_server",
                "has_server",
                "add_servers",
                "rm_servers",
                "namespace",
                "servers", 
                "history", 
                {"from": "history", "to": "h"}
            ],
            "docker":
                ["ps"],
            "chain": [
                ["s2e", "subnet2emission"], 
                "e",
                "emissions",
                "transfer_stake",
                "stake_transfer",
                "switch",
                "subnet",
                "update_module",
                "staketo", 
                "get_staketo", 
                "stakefrom",
                "get_stakefrom",
                "subnets",
                "send",
                "my_keys",
                "transfer",
                "multistake",
                "stake",
                "unstake",
                "register",
                "subnet_params",
                "global_params",
                "balance",
                {"from": "balance", "to": "bal"},
                "get_stake",
                "my_stake_to",
                "is_registered",
                "update_subnet"
            ],
            "agent": [ 
            "models",  
            "model2info", 
            "generate"
        ]
        },
    
        "core_features": [
            "get_module",
            "module_name", 
            "storage_dir", 
            "filepath", 
            "dirpath", 
            "code", 
            "info", 
            "cid",
            "schema", 
            "fns", 
            "fn2code", 
            "fn2hash",  
            "chat", 
            "ask", 
            "config_path", 
            "config"
        ]
    
}